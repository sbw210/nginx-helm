apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: {{ .Chart.Name }}                # service-nginx / Deployment 파드를 그룹핑 (서비스용 nginx용 파드)
  name: {{ .Values.name }}                # 고객명을 써서 Deployment Pod를 구분
  namespace: {{ .Values.name }}           # 고객 관리용 네임스페이스 = 이름과 동일하게
spec:
  replicas: {{ .Values.replicaCount }}    # 복제본 개수 (default는 1로)
  selector:
    matchLabels:
      app: {{ .Values.label }}            # 해당 deployment로 관리되는 pod에 붙일 라벨명 (고객명+숫자)
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.label }}          # 해당 deployment로 관리되는 pod에 붙일 라벨명 (고객명+숫자)
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"   #{이미지Repo명}:{이미지Tag/디폴트는 Chart.AppVersion을 따름)}
        name: {{ .Values.name }}.{{ .Chart.Name }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}         # 재생성시 이미지를 어떻게가져올것인지
        ports: 
          - containerPort: 80
            name: http
          - containerPort: 22
            name: ssh
        volumeMounts:
          - name: {{ .Values.volume.name }}
            mountPath: {{ .Values.volume.path }}        
      volumes:
      - name: {{ .Values.volume.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.volume.claim }}
